
    model {
    
    # -------------------------------------------------
    # Parameters:
    # phi: monthly survival probability intercept
    # p.obs: probability to be tracked with functioning tag (=1)
    # -------------------------------------------------

    
    # Priors and constraints
    
    
    # MONTHLY SURVIVAL PROBABILITY
  for (i in 1:nind){
    for (t in f[i]:(n.occasions)){
      logit(phi[i,t]) <- lp.mean[mig[i,t]] + b.phi.age*(age[i,t])  +   ### age and migratory stage category-specific intercept and slope for non-adult bird to increase survival with age
                            #b.phi.capt*(capt[i])*(adult[i,t])   +     ### survival dependent on captive-release and time since the captive bird was released as long as captive-released bird is not an adult
                            #b.phi.lat*(lat[i,t]) +                      #### probability of monthly survival dependent on latitude
                            b.phi.pop[pop[i]]                             #### probability of survival varies by population
      } #t
    } #i
    
    
    #### CATEGORICAL INTERCEPTS FOR SURVIVAL PROBABILITY based on age (adult/sub-adult) and migratory stage (stationary/migratory)
    for(stagecat in 1:3) {
      mean.phi[stagecat] ~ dunif(0.5, 0.999999)   # uninformative prior for all MONTHLY survival probabilities
      lp.mean[stagecat] <- log(mean.phi[stagecat]/(1 - mean.phi[stagecat]))    # logit transformed survival intercept
    }
    
    #### SLOPE PARAMETERS FOR SURVIVAL PROBABILITY
    b.phi.age ~ dnorm(0, 0.001)                # Prior for slope of age on survival probability on logit scale
    #b.phi.capt ~ dnorm(0, 0.001)         # Prior for slope of time since release on survival probability on logit scale
    #b.phi.lat ~ dnorm(0, 0.001)         # Prior for slope of latitude on survival probability on logit scale

    #### OFFSET FOR POPULATIONS
    for(p in 1:4){
      b.phi.pop[p] ~ dnorm(0, 0.001)         # Prior for slope of longitude on survival probability on logit scale
    }

    # TAG FAILURE AND LOSS PROBABILITY
    for (i in 1:nind){
      for (t in f[i]:(n.occasions)){
        obs.error[i,t] ~ dnorm(0, tau) ### RANDOM INDIVIDUAL EFFECT
        logit(p.obs[i,t]) <- mean.p + obs.error[i,t]   #### probability of observation
      } #t
    } #i
    

    # PARAMETERS FOR OBSERVATION PROBABILITY
    mean.p ~ dnorm(0, 0.001)                # Prior for intercept of observation probability on logit scale
    sigma ~ dunif(0, 10)                     # Prior on standard deviation for random error term
    tau <- pow(sigma, -2)
    


# Likelihood 
  for (i in 1:nind){
    # Define latent state at first capture
    z[i,f[i]] <- 1

    for (t in (f[i]+1):n.occasions){

      # State process
      z[i,t] ~ dbern(mu1[i,t])
      mu1[i,t] <- phi[i,t-1] * z[i,t-1]
      
      # Observation process
      y[i,t] ~ dbern(mu2[i,t])
      mu2[i,t] <- p.obs[i,t-1] * z[i,t]
    } #t
  } #i
}
    
